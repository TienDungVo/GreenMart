/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.duan1.ui;

import com.duan1.dao.DoanhMucDao;
import com.duan1.entity.DoanhMuc;
import com.raven.datechooser.DateChooser;
import java.awt.Color;
import java.awt.Component;
import javaswingdev.chart.ModelPieChart;
import javaswingdev.chart.PieChart;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.sql.SQLException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JList;

/**
 *
 * @author dung8
 */
public class ThongKeTatCa extends javax.swing.JInternalFrame {

    private DateChooser chDateBieuDo = new DateChooser();

    /**
     * Creates new form ThongKeTatCa
     */
    public ThongKeTatCa() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
        ThongKe();
        ThongKeTop1();
        fillComboBox();
        chDateBieuDo.setTextField(txtNgayBieuDo);

        chDateBieuDo.setDateSelectionMode(DateChooser.DateSelectionMode.SINGLE_DATE_SELECTED);
        chDateBieuDo.setLabelCurrentDayVisible(false);
        chDateBieuDo.setDateFormat(new SimpleDateFormat("MM-yyyy"));

//        getContentPane().setBackground(new Color(255, 255, 255));
//        pieChart1.setChartType(PieChart.PeiChartType.DONUT_CHART);
//        pieChart1.addData(new ModelPieChart("Tigher", 150, new Color(23, 126, 238)));
//        pieChart1.addData(new ModelPieChart("ABC", 100, new Color(221, 65, 65)));
//        pieChart1.addData(new ModelPieChart("Coca", 1, new Color(47, 157, 64)));
//        pieChart1.addData(new ModelPieChart("Vita", 60, new Color(196, 151, 58)));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        pieChart1 = new javaswingdev.chart.PieChart();
        cboDoanhMuc = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        txtNgayBieuDo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        pieChart2 = new javaswingdev.chart.PieChart();
        jLabel4 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(78, 163, 89));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pieChart1.setBackground(new java.awt.Color(255, 255, 255));
        pieChart1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thống Kê Theo Doanh Mục", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 12))); // NOI18N
        pieChart1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pieChart1, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pieChart1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, 450, 370));

        jPanel1.add(cboDoanhMuc, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, 140, -1));

        jButton1.setText("Tra Cứu");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 130, -1, -1));
        jPanel1.add(txtNgayBieuDo, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 130, 120, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Thống Kê");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 10, 230, 90));

        pieChart2.setBackground(new java.awt.Color(255, 255, 255));
        pieChart2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Thống Kê Tất Cả", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 12))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pieChart2, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pieChart2, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 260, 360, 270));

        jLabel4.setBackground(new java.awt.Color(110, 201, 195));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/duan1/icon/300x0w.jpg"))); // NOI18N
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 10, 360, 250));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 889, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String doanhmuc = (String) cboDoanhMuc.getSelectedItem();
//        String thanghh = (String) thang.getSelectedItem();
//        String namhh = (String) this.nam.getSelectedItem();
//
//        int thang = Integer.parseInt(thanghh);
//        int nam = Integer.parseInt(namhh);
        String txtngay = txtNgayBieuDo.getText();
        String[] parts = txtngay.split("-");

        int month = Integer.parseInt(parts[0]); // Ép kiểu month sang int
        int year = Integer.parseInt(parts[1]);
        themsoluTP(doanhmuc, month, year);
        ThongKeAll(month, year);

    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cboDoanhMuc;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javaswingdev.chart.PieChart pieChart1;
    private javaswingdev.chart.PieChart pieChart2;
    private javax.swing.JTextField txtNgayBieuDo;
    // End of variables declaration//GEN-END:variables
    DoanhMucDao dmdao = new DoanhMucDao();
// thao từng doanh mục

    public void themsoluTP(String category, int month, int year) {
        try {
            pieChart1.clearData();
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:1433;databaseName=GreenMart";
            Connection con = DriverManager.getConnection(url, "sa", "123");

            // Sử dụng PreparedStatement để thực hiện truy vấn parametrized (truy vấn có tham số)
            String sql = "SELECT CAST(sp.TenSanPham AS NVARCHAR(MAX)) AS TenSanPham, SUM(hct.SoLuong * hct.Gia) AS TongSoLuong\n"
                    + "FROM SanPham sp\n"
                    + "JOIN HoaDonChiTiet hct ON sp.IDSanPham = hct.IDSanPham\n"
                    + "JOIN DoanhMucSanPham dm ON sp.IDDanhMuc = dm.IDDanhMuc\n"
                    + "JOIN HoaDon hd ON hct.IDHoaDon = hd.IDHoaDon\n"
                    + "WHERE dm.TenDoanhMuc = ?\n"
                    + "AND MONTH(hd.ThoiGian) = ?\n"
                    + "AND YEAR(hd.ThoiGian) = ?\n"
                    + "GROUP BY CAST(sp.TenSanPham AS NVARCHAR(MAX)); ";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, category);  // Truyền giá trị cho tham số thứ nhất trong truy vấn
            ps.setInt(2, month);  // Truyền giá trị cho tham số thứ hai trong truy vấn
            ps.setInt(3, year);  // Truyền giá trị cho tham số thứ ba trong truy vấn

            ResultSet rs = ps.executeQuery();
            int index = 0;
            while (rs.next()) {
                String productName = rs.getString(1);
                double values = rs.getDouble(2);
                pieChart1.addData(new ModelPieChart(productName, values, getColor(index++)));
            }
            rs.close();
            ps.close();
            con.close();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private Color getColor(int index) {
        Color[] color = new Color[]{new Color(110, 201, 195),
            new Color(58, 55, 227),
            new Color(206, 215, 33),
            new Color(29, 184, 85),
            new Color(94, 217, 214),
            new Color(255, 204, 204),
            new Color(204, 229, 255),
            new Color(255, 255, 204)};
        return color[index];
    }

    void ThongKe() {
        try {
            pieChart1.clearData();
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:1433;databaseName=GreenMart";
            Connection con = DriverManager.getConnection(url, "sa", "123");
            Statement st = con.createStatement();
            String sql = "SELECT CAST(sp.TenSanPham AS NVARCHAR(MAX)) AS TenSanPham, SUM(hct.SoLuong * hct.Gia) AS TongSoLuong\n"
                    + "FROM SanPham sp\n"
                    + "JOIN HoaDonChiTiet hct ON sp.IDSanPham = hct.IDSanPham\n"
                    + "JOIN DoanhMucSanPham dm ON sp.IDDanhmuc = dm.IDDanhMuc\n"
                    + "JOIN HoaDon hd ON hct.IDHoaDon = hd.IDHoaDon\n"
                    + "WHERE dm.TenDoanhMuc = N'Đồ Uống'\n"
                    + "AND MONTH(hd.ThoiGian) = 11\n"
                    + "AND YEAR(hd.ThoiGian) = 2023\n"
                    + "GROUP BY CAST(sp.TenSanPham AS NVARCHAR(MAX)); ";
            ResultSet rs = st.executeQuery(sql);
            int index = 0;
            while (rs.next()) {
                String productName = rs.getString(1);
                double values = rs.getDouble(2);
                pieChart1.addData(new ModelPieChart(productName, values, getColor(index++)));
            }
            rs.close();
            st.close();
            con.close();

        } catch (Exception e) {
        }
    }

    void fillComboBox() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboDoanhMuc.getModel();
        model.removeAllElements();
        try {
            List<DoanhMuc> list = dmdao.select();
            for (DoanhMuc dm : list) {
                String valueToAdd = dm.getTenDoanhMuc();
                model.addElement(valueToAdd);
            }

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    // thong ke theo All doanh muc
    private Color getColor1(int index) {
        Color[] color = new Color[]{new Color(110, 201, 195),
            new Color(255, 204, 204),
            new Color(204, 229, 255),
            new Color(255, 255, 204),
            new Color(58, 55, 227),
            new Color(206, 215, 33),
            new Color(29, 184, 85),
            new Color(94, 217, 214)};
        return color[index];
    }

    void ThongKeAll(int month, int year) {
        try {
            pieChart2.clearData();
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:1433;databaseName=GreenMart";
            Connection con = DriverManager.getConnection(url, "sa", "123");

            // Sử dụng PreparedStatement để thực hiện truy vấn parametrized (truy vấn có tham số)
            String sql = "SELECT DM.TenDoanhMuc AS TenDoanhMuc,\n"
                    + "       SUM(HDCT.SoLuong * SP.Gia) AS DoanhThu\n"
                    + "FROM DoanhMucSanPham DM\n"
                    + "JOIN SanPham SP ON DM.IDDanhMuc = SP.IDDanhmuc\n"
                    + "JOIN HoaDonChiTiet HDCT ON SP.IDSanPham = HDCT.IDSanPham\n"
                    + "JOIN HoaDon HD ON HDCT.IDHoaDon = HD.IDHoaDon\n"
                    + "WHERE MONTH(HD.ThoiGian) = ?\n"
                    + "  AND YEAR(HD.ThoiGian) = ?\n"
                    + "GROUP BY DM.TenDoanhMuc; ";
            PreparedStatement ps = con.prepareStatement(sql);
            // Truyền giá trị cho tham số thứ nhất trong truy vấn
            ps.setInt(1, month);  // Truyền giá trị cho tham số thứ hai trong truy vấn
            ps.setInt(2, year);  // Truyền giá trị cho tham số thứ ba trong truy vấn

            ResultSet rs = ps.executeQuery();
            int index = 0;
            while (rs.next()) {
                String productName = rs.getString(1);
                double values = rs.getDouble(2);
                pieChart2.addData(new ModelPieChart(productName, values, getColor1(index++)));
            }
            rs.close();
            ps.close();
            con.close();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    void ThongKeTop1() {
        try {
            pieChart2.clearData();
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:1433;databaseName=GreenMart";
            Connection con = DriverManager.getConnection(url, "sa", "123");
            Statement st = con.createStatement();
            String sql = "SELECT DM.TenDoanhMuc AS TenDoanhMuc,\n"
                    + "       SUM(HDCT.SoLuong * SP.Gia) AS DoanhThu\n"
                    + "FROM DoanhMucSanPham DM\n"
                    + "JOIN SanPham SP ON DM.IDDanhMuc = SP.IDDanhmuc\n"
                    + "JOIN HoaDonChiTiet HDCT ON SP.IDSanPham = HDCT.IDSanPham\n"
                    + "JOIN HoaDon HD ON HDCT.IDHoaDon = HD.IDHoaDon\n"
                    + "WHERE MONTH(HD.ThoiGian) = 12\n"
                    + "  AND YEAR(HD.ThoiGian) = 2023\n"
                    + "GROUP BY DM.TenDoanhMuc; ";
            ResultSet rs = st.executeQuery(sql);
            int index = 0;
            while (rs.next()) {
                String productName = rs.getString(1);
                double values = rs.getDouble(2);
                pieChart2.addData(new ModelPieChart(productName, values, getColor1(index++)));
            }
            rs.close();
            st.close();
            con.close();

        } catch (Exception e) {
        }
    }

}
